{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAOF,SAASG,cAAc,SAYpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IApBPJ,EAAKD,iBAAiB,UAAU,SAAUa,GACxCA,EAAMC,iBAEN,IAAMT,EAAQU,SAASd,EAAKe,SAAgB,MAAEC,OACxCC,EAAOH,SAASd,EAAKe,SAAe,KAAEC,QAoB9C,SAA0BE,EAAQd,EAAOa,GACvC,IAAK,IAAIE,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAGhCjB,EAAciB,EAFOf,GAASe,EAAI,GAAKF,GAGpCG,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALjB,MACjBmB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALjB,MAClBmB,EAAA3B,GAAS4B,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANJ,EAAM,M,KA7BnDO,CAFef,SAASd,EAAKe,SAAiB,OAAEC,OAEvBZ,EAAOa,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const delay = parseInt(form.elements['delay'].value);\n    const step = parseInt(form.elements['step'].value);\n    const amount = parseInt(form.elements['amount'].value);\n\n    generatePromises(amount, delay, step);\n  });\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n\n  function generatePromises(amount, delay, step) {\n    for (let i = 1; i <= amount; i++) {\n      const currentDelay = delay + (i - 1) * step;\n\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n  }\n});\n"],"names":["$6JpON","parcelRequire","document","addEventListener","form","querySelector","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","event","preventDefault","parseInt","elements","value","step","amount","i","then","param","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","generatePromises"],"version":3,"file":"03-promises.6c827d68.js.map"}